@import "neat";
@import "grid";


@mixin clearfix {
  &::after {
    content: '';
    clear: both;
    display: table;
  }
}

$background: black;
$foreground: white;

.no-grid {
  background-image: none !important;
}

$show-grid-visual: true;

$columns-count--mobile: 4;
$columns-count--portrait: 6;
$columns-count--landscape: 12;
$columns-count--desktop: 12;

$grid-max-width--mobile: 640px;
$grid-max-width--portrait: 800px;
$grid-max-width--landscape: 1180px;
$grid-max-width--desktop: 1220px;
$grid-max-width--canvas: 1440px;

$grid-offset: 110px;

$grid-media--mobile: (
  columns: $columns-count--mobile,
  gutter: 16px,
  media: 0px,
  );

$grid-media--portrait: (
  columns: $columns-count--portrait,
  gutter: 16px,
  media: 640px,
  );

$grid-media--landscape: (
  columns: $columns-count--landscape,
  gutter: 16px,
  media: 800px,
  );

$grid-media--desktop: (
  columns: $columns-count--desktop,
  gutter: 20px,
  media: 1180px,
  );

$grid-media--canvas: (
  columns: $columns-count--desktop,
  gutter: 20px,
  media: 1440px,
  );

@mixin layout($mobile: $columns-count--mobile, $portrait: $columns-count--portrait, $landscape: $columns-count--landscape, $desktop: $columns-count--desktop, $gutter: -1, $direction: "ltr") {

  $props: (
    direction: $direction
    );

  @if $gutter != -1 {
    $props: map-merge($props, (gutter: $gutter));
  }

  @include grid-media($grid-media--mobile) {
    @include grid-column($mobile, $props);
  }
  @include grid-media($grid-media--portrait) {
    @include grid-column($portrait, $props);
  }
  @include grid-media($grid-media--landscape) {
    @include grid-column($landscape, $props);
  }
  @include grid-media($grid-media--desktop) {
    @include grid-column($desktop, $props);
  }
}

@mixin container() {

  float: none;
  margin-left: auto;
  margin-right: auto;
  padding: 0;
  @include clearfix;
  @include grid-media($grid-media--mobile) {
    max-width: $grid-max-width--mobile;
  }
  @include grid-media($grid-media--portrait) {
    max-width: $grid-max-width--portrait;
  }
  @include grid-media($grid-media--landscape) {
    max-width: $grid-max-width--landscape;
  }
  @include grid-media($grid-media--desktop) {
    max-width: $grid-max-width--desktop;
  }

  @if $show-grid-visual == false {
    @include grid-media($grid-media--mobile) {
      @include grid-visual( rgba(purple, .2) );
    }
    @include grid-media($grid-media--portrait) {
      @include grid-visual( rgba(red, .2) );
    }
    @include grid-media($grid-media--landscape) {
      @include grid-visual( rgba(orange, .2) );
    }
    @include grid-media($grid-media--desktop) {
      @include grid-visual( rgba(yellow, .2) );
    }
    @include grid-media($grid-media--canvas) {
      @include grid-visual( rgba(brown, .2) );
    }
  }
}

$grid-media--full-desktop: (
  columns: $columns-count--desktop,
  gutter: 20px,
  media: 100%,
  );

@mixin container-full() {
  @include clearfix;
  float: none;
  margin-right: auto;
  padding: 0;

  @include grid-media($grid-media--full-desktop) {
    max-width: $grid-max-width--desktop;
  }

  @if $show-grid-visual == true {
    @include grid-media($grid-media--canvas) {
      @include grid-visual( rgba(brown, .2) );
    }
  }
}

@mixin offset($offset-mobile: 0, $offset-portrait: 0, $offset-landscape: 0, $offset-desktop: 0) {
  @include grid-media($grid-media--mobile) {
    @include grid-push($offset-mobile, $grid-media--mobile);
  }
  @include grid-media($grid-media--portrait) {
    @include grid-push($offset-portrait, $grid-media--portrait);
  }
  @include grid-media($grid-media--landscape) {
    @include grid-push($offset-landscape, $grid-media--landscape);
  }
  @include grid-media($grid-media--desktop) {
    @include grid-push($offset-desktop, $grid-media--desktop);
  }
}

@mixin shift($shift-mobile: 0, $shift-portrait: 0, $shift-landscape: 0, $shift-desktop: 0) {
  @include grid-media($grid-media--mobile) {
    @include grid-shift($shift-mobile, $grid-media--mobile);
  }
  @include grid-media($grid-media--portrait) {
    @include grid-shift($shift-portrait, $grid-media--portrait);
  }
  @include grid-media($grid-media--landscape) {
    @include grid-shift($shift-landscape, $grid-media--landscape);
  }
  @include grid-media($grid-media--desktop) {
    @include grid-shift($shift-desktop, $grid-media--desktop);
  }
}

@mixin gitchText($offset, $text) {
  content: $text;
  position: absolute;
  left: $offset;
  top: $offset;
  clip: rect(0, 900px, 0, 0); 
  background-color: $background;
  color: $foreground;
  animation: glitch 3s infinite alternate-reverse;
  animation-delay: 2s;
}

html, body {
  margin: 0;
  padding: 0;
  background-color: $background;
  color: $foreground; 
  font-family: 'Medula One', sans-serif;
  font-size: 3em;
}

span:first-child {
  margin-right: 20px;
}

span:last-child {
  color: $background;
  background-color: $background;
  animation: fadeWhite 4s forwards;
  animation-delay: .5s;
  position: relative;
  &:after {
    @include gitchText(2px, 'out');
  }
  &:before {
    @include gitchText(-2px, 'out');
  }
}

@keyframes fadeWhite {
  100% { color: $foreground; }
}

@keyframes glitch {
  $steps: 20;
  @for $i from 0 through $steps{
    #{percentage($i * (1 / $steps))}{
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}

.main {
	@include grid-container();
	position:relative;
  height:100%;
  width:100%;
  top: 20px;

  .title {
   max-width: 200px;
   margin: auto;
   opacity: 1;
   margin-bottom: 30px;

   @include grid-media($grid-media--landscape) {
    max-width: 400px;
    margin-top: 20%;
  }
}
}

.panel {
	position:relative;
  opacity: 1;
  min-height:100%;
  width:100%;
  z-index:1000;
}

#a {
	background:black;
  position:fixed;
  top:0;
  z-index:-99;
}

#b {
	margin-top:100%;
	text-align: center;
 background:black;
}

#c {
  background: black;
  opacity: 1;

  .content2 {
    padding: 30px;
    opacity: 1;

    @include grid-media($grid-media--landscape){
      padding: 170px;
      padding-top: 50px;
    }
    
  }
}

#d {
  background: black;

  .content3 {
    padding: 30px;
    opacity: 1;

    @include grid-media($grid-media--landscape){
      padding: 170px;
      padding-top: 50px;
    }
  }
}

#e {
  background:black;

  .content4 {
    padding: 30px;
    opacity: 1;

    @include grid-media($grid-media--landscape){
      padding: 170px;
      padding-top: 50px;
    }
  }

}

#f {
  background:black;

  .content5 {
    padding: 30px;
    opacity: 1;

    @include grid-media($grid-media--landscape){
      padding: 170px;
      padding-top: 50px;
    }
  }

}

.main2 {
  @include grid-container();
  position:relative;
  height:100%;
  width:100%;
}


.content1 {
  padding: 30px;
  opacity: 1;

  @include grid-media($grid-media--landscape){
    padding: 170px;
    padding-top: 50px;
  }
}


p {
  font-family: "Roboto";
  font-size: 20px; 
}

#video2 {
  @include layout(4,6,8,12);
  @include shift(0,0,2,0);
  z-index: 1;
}

#video3 {
  @include layout(4,6,8,12);
  @include shift(0,0,2,0);
  z-index: 1;
}

#video4 {
  margin-bottom: 20px;
  @include layout(4,6,8,12);
  @include shift(0,0,2,0);
  z-index: 1;
}

#video5 {
  @include layout(4,6,8,12);
  @include shift(0,0,2,0);
  z-index: 1;
}

.fixed {
  position: fixed;
  z-index: -100;
  bottom: 0;
}


.animation-element.slide-left {
  opacity: 0;
  -moz-transition: all 800ms linear;
  -webkit-transition: all 800ms linear;
  -o-transition: all 800ms linear;
  transition: all 800ms linear;
  -moz-transform: translate3d(-800px, 0px, 0px);
  -webkit-transform: translate3d(-800px, 0px, 0px);
  -o-transform: translate(-800px, 0px);
  -ms-transform: translate(-800px, 0px);
  transform: translate3d(-800px, 0px, 0px);
}

.animation-element.slide-left.in-view {
  opacity: 1;
  -moz-transform: translate3d(0px, 0px, 0px);
  -webkit-transform: translate3d(0px, 0px, 0px);
  -o-transform: translate(0px, 0px);
  -ms-transform: translate(0px, 0px);
  transform: translate3d(0px, 0px, 0px);
}


